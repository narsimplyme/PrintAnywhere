<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<task:annotation-driven />

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 업로드를 위한 bean -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      	<beans:property name="maxUploadSize" value="100000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
        <beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>
	
	<!-- 다운로드를 위한 bean -->	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	   <beans:property name="order" value="0"/>
	</beans:bean>
	
	<context:component-scan base-package="com.capstone" />
	<beans:bean id="factoryDao" class="com.capstone.model.FactoryDao" factory-method="getInstance" scope="singleton">
			<beans:constructor-arg>
				<beans:map>
					<beans:entry key="driver" value="org.mariadb.jdbc.Driver"/>
					<beans:entry key="url">
						<beans:value>jdbc:mysql://xdkyu02.cafe24.com:3306/xdkyu02</beans:value>
					</beans:entry>
					<beans:entry key="username">
						<beans:value>xdkyu02</beans:value>
					</beans:entry>
					<beans:entry key="password">
						<beans:value>a60122467</beans:value>
					</beans:entry>
				</beans:map>
			</beans:constructor-arg>
	</beans:bean>  
	<!-- Connection Pool DataSource -->

	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
	    <beans:property name="driverClassName" value="org.mariadb.jdbc.Driver" />
	    <beans:property name="url" value="jdbc:mysql://xdkyu02.cafe24.com:3306/xdkyu02" />
	    <beans:property name="username" value="xdkyu02" />
		<beans:property name="password" value="a60122467" />
	</beans:bean>

	<!-- MyBatis SqlSessionFactoryBean --> 
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	   	<beans:property name="dataSource" ref="dataSource"/> 
		<beans:property name="configLocation" value="classpath:mybatis/configuration.xml" /> 
	</beans:bean>
	<!-- MyBatis SqlSessionTemplate -->
	<!-- 생성자의 첫 번째 파라미터에 sqlSessionFactory 객체를 넣으라는 의미 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	
</beans:beans>
